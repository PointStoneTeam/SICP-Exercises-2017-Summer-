#lang scheme
(define x (list 1 2 3))
(define y (list 4 5 6))
(append x y)
 (1 2 3 4 5 6)     (2 3 4 5 6)      (3 4 5 6)     (4 5 6)      (5 6)     (6)
[*]-------------> [*]------------> [*]---------> [*]--------> [*]-----> [*]---> nil
 |                 |                |             |            |         |
 v                 v                v             v            v         v
 1                 2                3             4            5         6

(cons x y)
((1 2 3) 4 5 6)     (4 5 6)      (5 6)       (6)
[*]---------------> [*]--------> [*]-------> [*]---> nil
 |                   |            |           |
 |                   v            v           v
 |                   4            5           6
 |
 | (1 2 3)     (2 3)         (3)
[*]---------> [*]---------> [*]-----> nil
 |             |             |
 v             v             v
 1             2             3
;;;4 5 6没有括号是因为cons后面部分全部为 cdr 对其取car后就是剩下的cdr 带括号的 4 5 6=>（4 5 6）
(list x y)
 ((1 2 3) (4 5 6))      ((4 5 6))
[*]------------------> [*]------------> nil
 |                      |
 |                      |
 |                      | (4 5 6)      (5 6)      (6)
 |                     [*]----------> [*]------> [*]---> nil
 |                      |              |          |
 |                      v              v          v
 |                      4              5          6
 |
 | (1 2 3)      (2 3)        (3)
[*]----------> [*]--------> [*]----> nil
 |              |            |
 v              v            v
 1              2            3

